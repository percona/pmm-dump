#!/bin/bash

# This script runs go tests.

set -o errexit

timeout="20m"
build_tag="$1"

pmm2=$(curl --get "https://hub.docker.com/v2/repositories/percona/pmm-server/tags/" \
        -d "page_size=25" \
        -d "page=1" \
        -d "name=2." \
        -d "ordering=last_updated" \
        | jq -r '.results[] | select(.name | startswith("2.")) | .name ' | head -n 1) 

pmm3=$(curl --get "https://hub.docker.com/v2/repositories/percona/pmm-server/tags/" \
        -d "page_size=25" \
        -d "page=1" \
        -d "name=3." \
        -d "ordering=last_updated" \
        | jq -r '.results[] | select(.name | startswith("3.")) | .name ' | head -n 1) 


trap exit 1 SIGINT

go clean -testcache

run_e2e_tests() {
	rm -f test/.env.test 
	rm -f test/.env2.test
	./support-files/destroy-test-resources

	PMM_CLIENT_IMAGE="perconalab/pmm-client"  PMM_SERVER_IMAGE="perconalab/pmm-server" PMM_VERSION=$pmm3 ./setup/test/init-test-configs.sh test
	go test -timeout "$timeout" -tags e2e ./internal/test/e2e/... -v  
}
run_e2e_tests_v2() {
	rm -f test/.env.test 
	rm -f test/.env2.test
	./support-files/destroy-test-resources

	PMM_CLIENT_IMAGE="percona/pmm-client"  PMM_SERVER_IMAGE="percona/pmm-server" PMM_VERSION=$pmm2 ./setup/test/init-test-configs.sh test
	go test -timeout "$timeout" -tags e2e ./internal/test/e2e/... -v  
}
run_unit_tests() {
	rm -f test/.env.test 
	rm -f test/.env2.test
	go test -timeout "$timeout" ./... -v \
		| grep -v '\[no test files\]' # Filtering lines like `? pmm-dump/pkg/victoriametrics [no test files]`
}

if [[ ${build_tag} == "v2"  ]]; then
	run_e2e_tests_v2
elif [[ -n $build_tag ]]; then
	run_e2e_tests
else
	run_unit_tests
fi
